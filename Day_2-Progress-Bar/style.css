/* We can import css like this */
@import url("https://fonts.googleapis.com/css2?family=Muli&display=swap");

:root {
  --line-border-fill: #3498db;
  --line-border-empty: #e0e0e0;
}

/* Universal selector to undo default behaviour */
* {
  box-sizing: border-box;
}

body {
  background-color: #f6f7fb;
  font-family: "Muli", sans-serif;
  margin: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  /* I give the body the ability to exapnd fully to the screen size so that i stays centered */
  height: 100vh;
  /* Scrollbars wont show when content overflows */
  overflow: hidden;
}

.container {
  text-align: center;
}

/* Position the container that has the circles with numbers */
.progress-container {
  display: flex;
  justify-content: space-between;
  position: relative;
  margin-bottom: 30px;
  max-width: 100%;
  width: 350px;
}

/* The gray line that sits behind the scenes */
/* I dont understant how the top and transform are used both to move the line */
.progress-container::before {
  content: "";
  background-color: var(--line-border-empty);
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  height: 4px;
  width: 100%;
  z-index: -1;
}

/* This stacks on top of the gray line and gives the sensation that it feels in the transition */
/* Initially we have no style aplied, hence the width is 0 */
.progress {
  background-color: var(--line-border-fill);
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  height: 4px;
  width: 0%;
  z-index: -1;
  transition: 400ms ease;
}

/* Style the circles, they are divs with a specific width and border radios to create circles
  the flex is used to center the content inside them, the numbers themselves */
.circle {
  background-color: #fff;
  color: #999;
  border-radius: 50%;
  height: 30px;
  width: 30px;
  /* This centers the numbers inside the circle */
  display: flex;
  align-items: center;
  justify-content: center;
  border: 3px solid var(--line-border-empty);
  transition: 400ms ease;
}

.circle.active {
  border-color: var(--line-border-fill);
}

.btn {
  background-color: var(--line-border-fill);
  color: #fff;
  border: 0;
  border-radius: 6px;
  cursor: pointer;
  font-family: inherit;
  padding: 8px 30px;
  margin: 5px;
  font-size: 14px;
}

/* Shrink the size a little bit when i press, with no transition for instant feedback */
.btn:active {
  transform: scale(0.95);
}

/* Visual feedback, it shrinks just a little bit when pressed bcs the outline gets erased */
.btn:focus {
  outline: 0;
}

/* When the btn has the atribute disabled i changed the way the cursor shows when i hover over it 
  and give virsual response with the bg color*/
.btn:disabled {
  background-color: var(--line-border-empty);
  cursor: not-allowed;
}
